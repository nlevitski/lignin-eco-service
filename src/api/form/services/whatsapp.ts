// path: ./src/services/whatsapp.js

// import { Client, LocalAuth } from 'whatsapp-web.js';
// import qrcode from 'qrcode-terminal';
// import fs from 'fs';

// export default {
// 	client: null,

// 	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
// 	initialize: async () => {
// 		try {
// 			const client = new Client({
// 				authStrategy: new LocalAuth({
// 					dataPath: './whatsapp-sessions', // –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
// 				}),
// 			});

// 			client.on('qr', (qr) => {
// 				// –°–æ—Ö—Ä–∞–Ω—è–µ–º QR-–∫–æ–¥ –≤ —Ñ–∞–π–ª –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É
// 				fs.writeFileSync('./public/whatsapp-qr.txt', qr);

// 				// –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
// 				qrcode.generate(qr, { small: true });
// 				console.log(
// 					'WhatsApp QR-–∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω. –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É /whatsapp-qr.txt'
// 				);
// 			});

// 			client.on('ready', () => {
// 				console.log('WhatsApp –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
// 			});

// 			client.on('authenticated', () => {
// 				console.log('WhatsApp –∫–ª–∏–µ–Ω—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
// 			});

// 			client.on('auth_failure', (msg) => {
// 				console.error('–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ WhatsApp:', msg);
// 			});

// 			await client.initialize();
// 			this.client = client;
// 			return client;
// 		} catch (error) {
// 			console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WhatsApp –∫–ª–∏–µ–Ω—Ç–∞:', error);
// 			throw error;
// 		}
// 	},

// 	// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
// 	sendMessage: async (to, message) => {
// 		if (!this.client) {
// 			throw new Error('WhatsApp –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
// 		}
// 		let chatId;

// 		// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—É—á–∞—Ç–µ–ª—è (–≥—Ä—É–ø–ø–∞ –∏–ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —á–∞—Ç)
// 		if (to.includes('@g.us')) {
// 			// –≠—Ç–æ —É–∂–µ ID –≥—Ä—É–ø–ø—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
// 			chatId = to;
// 		} else if (to.includes('@c.us')) {
// 			// –≠—Ç–æ —É–∂–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
// 			chatId = to;
// 		} else if (to.startsWith('group:')) {
// 			// –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –Ω–æ –±–µ–∑ –¥–æ–º–µ–Ω–∞
// 			chatId = `${to.replace('group:', '')}@g.us`;
// 		} else {
// 			// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
// 			chatId = `${to}@c.us`;
// 		}

// 		try {
// 			const result = await this.client.sendMessage(chatId, message);

// 			return result;
// 		} catch (error) {
// 			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
// 			throw error;
// 		}
// 	},
// };
// interface FormData {
// 	email: string;
// 	phone: string;
// 	name: string;
// 	message: string;
// }

// export default {
// 	async sendMessage(data: FormData): Promise<boolean> {
// 		try {
// 			const message = `üìù –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞:\n\nüë§ –ò–º—è: ${data.name}\nüìß Email: ${data.email}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}\n\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n${data.message}`;
// 			await bot.sendMessage(CHAT_ID, message);

// 			return true;
// 		} catch (error) {
// 			console.error('Error sending Telegram notification:', error);
// 			return false;
// 		}
// 	},
// };
